How did viewing a diff between two versions of a file help you see the bug that was introduced?
-It limited the amount of text I had to search through

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
-Allows you to look back to things that were working if something breaks.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
-Pro: Commits make sense, and should be compilable
-Con: If you forget to commit, you're out of luck.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
-Depends on the focus of the version control. Google docs is focused on single files, while programming uses groups of files.

How can you use the commands git log and git diff to view the history of files?
-Log sees why a commit was made. Diff shows what changed.

How might using version control make you more confident to make changes that could break something?
-Because you can always revert it.

Now that you have your workspace set up, what do you want to try using Git for?
-Version control

